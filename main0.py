import os
import extract_from_labelme as ex
import synthetic_methapase_generator as g
import get_YOLO_dataset as y
from random import randrange
import execute_yolo as t


# gets current path
path = os.getcwd()

# gets number of executeble program
execute = 24
# gets number of images already generated by this .py file
n_start = 62

####################################################################################################
################################### CROPPED DATASET #######################################
####################################################################################################

# erases cropped objects
# ex.erase_cropped(path, erase_chro = True, erase_nucl = False, erase_obj = True)

# extract cropped images from labelme
# ex.extract_cropped_images(path, extract_chr = True, extract_nucl = False, extract_obj = True)


# ####################################################################################################
# ################################### SYNTETHIC IMAGES DATASET #######################################
# ####################################################################################################

# # erases synthetic images
# # g.erase_images(path, erase_images = True)

# # generate synthetic dataset
# n_images_generated = 1000 # ~20 mins per image. 28*20mins > 9h
# for n in range(n_start, n_start+n_images_generated):
#     nucleolus_random = randrange(2)
#     if nucleolus_random == 1:
#       nucleolus_exists = True
#     else:
#       nucleolus_exists = False
#     nr_chromosomes = randrange(1)
#     nr_other_objects = randrange(10)
#     object_random = randrange(2)
#     nr_other_objects_random_max = randrange(1,51)
#     if object_random == 1:
#       nr_other_objects_random = True
#     else:
#       nr_other_objects_random = False
#     width = randrange(500,1024)
#     height = randrange(700,1376)
#     img_name = str(execute) + '_' + str(n)
#     g.generate_dataset(path, synthetic_img = img_name, nucleolus_exists = nucleolus_exists, nr_chromosomes = nr_chromosomes, \
#                           nr_other_objects = nr_other_objects, nr_other_objects_random = True, nr_other_objects_random_max = nr_other_objects_random_max, \
#                               width = width, height = height, iterations_ch2 = 10, kernel_ch2 = 2, \
#                                   iterations_ch1 = 10, kernel_ch1 = 2)
#     print("Inputs for image {} were:\n Nucleolus: {}, Nr_Chromosomes: {}, Nr_other_objects: {}, Nr_other_objects_random: {}, Nr_other_objects_random_max: {}, Height: {}, Width: {}".format(\
#                   img_name, nucleolus_exists, nr_chromosomes, nr_other_objects, nr_other_objects_random, nr_other_objects_random_max, width, height))

# # g.generate_dataset(path, nr_synthetic_img = 1, nucleolus_exists = True, nr_chromosomes = 5, \
# #                         nr_other_objects = 50, nr_other_objects_random = True, nr_other_objects_random_max = 50, \
# #                             width = 1024, height = 1376, iterations_ch2 = 0, kernel_ch2 = 2, \
# #                                 iterations_ch1 = 0, kernel_ch1 = 2)


# ####################################################################################################
# ################################### YOLO DATASET #######################################
# ####################################################################################################

# erases yolo dataset
# y.erase_yolo(path, erase_yolo = True)

# convert labels to YOLO and create YOLO dataset
# y.convert_labels_to_YOLO(path, label_chromosomes = True, label_nucleolus = False, label_other_objects = False)

# gets train, val and test groups
# t.get_train_val_test(dataset_size = 5000)